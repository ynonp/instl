24/6/2014 0.9.14   Shai Shasag <shai@waves.com>

     user visible changes, client:
     * Names of curl config files have same legth due to 0 padding the number. This will creaet more stable
       progress report in a progress dialog.


22/6/2014 0.9.14   Shai Shasag <shai@waves.com>

     user visible changes, client:
     * new command test_import to force loading of all required modules provoking error if any import fails.


20/6/2014 0.9.13.1   Shai Shasag <shai@waves.com>
    user visible changes, client & admin:
    * Fixed exceptions in interactive mode - no functionality change.

16/6/2014 0.9.13   Shai Shasag <shai@waves.com>

    programmer visible changes:
    Integrated all var-stack features:
    * InstallItem creates it's own var_list.
    * InstallItem pushes it's own var_list to var_stack through 'with' statement.
    * All action lists for an Installitem are taken from var_stack with variables.

9/6/2014 0.9.12   Shai Shasag <shai@waves.com>

    user visible changes, client:
    * new variable __PYTHON_VERSION__ to record the version of python instl was compiled with

    user visible changes, admin:
    * Added option to limit stage2svn to specific folders, to save time.
    * up-repo-rev now creates a batch file like all other commands.
    * up-repo-rev does not use boto - depends on aws command line tools.
    * No more usage of AWS keys inside instl or created batch files. All AWS config comes from the ./aws/config file.

    programmer visible changes:
    * New resolve methods for ConfigVarList: resolve, resolve_to_list, replace previous methods: get_str, resolve_string
        get_list.New methods are faster and simpler to unserstand.
    * Tests for new resolve methods.
    * Removed unused member Configvar.__resolving_in_progress, preventing circular resolves is done in ConfigVarList.
    * Introduced $(A[0]) array style references.
    * up2s3 calls up-repo-rev with --out parameter

28/5/2014 0.9.11   Shai Shasag <shai@waves.com>
    user visible changes, client:
    * Fixed a problem where index.yaml would not be copied to bookkeeping when syncing to DOK.
    
    programmer visible changes:
    * Copy tools got a new method copy_file_to_file.
    
27/5/2014 0.9.10   Shai Shasag <shai@waves.com>

    user visible changes, client:
    * Removed redundant echo during copy.
    * Fixed: set-exec was not called or caled using the wrong have-info-map file if command was synccopy.

    user visible changes, admin:
    * wtar command: removed previously wtar files if tarring should be preformed.

13/5/2014 0.9.9   Shai Shasag <shai@waves.com>

    user visible changes, client:
    * New line after each folder in copy operations.
    * No redundant cd to folder that has not actions for non copying items.
    * When unwtaring, if .done exists it's date compared to the target file.
    * Compilation time and compiling machine displayed as part of version

    user visible changes, admin:
    * wtar command checks if tared files should be executable and adjust. it's permissions.
    * stage2svn & wtar commands use chflags -R nouchg to remove the Lock flag that might be on files copied from smb server.
    * Changed options for fix-symlinks command, instead of --folder, the folder will be taken from the STAGING_FOLDER given in the --config-file option. Also --svn was deleted as it was never used.
    * wtar command: before wtaring, check and fix permissions for all that is being tarred.

    programmer visible changes:
    * New method InstlItem.all_action_list, returns a list of all actions for an item (before, after, folder_in, folder_out, copy_in, copy_out) intended so the total number of actions for item can be known.
    * New methods for InstlAdmin: is_file_exec, should_file_be_exec to deal with executable bits in the staging folder.
    * Removed unused methods of InstlInstanceSync_url: create_unwtar_instructions_for_item, create_checksum_instructions_for_item, these already have their own instl command.
    * New platformHelper method chmod: implemented for Linux and Mac only. make_executable is now implemented using chmod.
    * New platfromHelper method: unlock, Remove the system's read-only flag, implemented for Mac only.
    * New internal variables, created during compilation: __COMPILATION_TIME__, __SOCKET_HOSTNAME__, __PLATFORM_NODE__

11/5/2014 0.9.8   Shai Shasag <shai@waves.com>

    user visible changes, client:
    * Made progress messages more suitable for display in Central.
    * actions output messages changed to "pre-install step" "post-install step",  "pre-copy step", "post-copy step"
    * Improved help texts.
    * New help topic 'defaults' will display default variables and their values.
    * Copy instructions are performed from top folder down.
    * During copy all target folders are created before any other action, so to avoid dependency order problems such as creating links between folders

    user visible changes, admin:
    Added variables PUBLIC_KEY_FILE, PRIVATE_KEY_FILE to defaults file InstlAdmin.yaml.

    programmer visible changes:
    * Copy now sorts the install_items_by_target_folder list.

4/5/2014 0.9.7   Shai Shasag <shai@waves.com>

    user visible changes, client:
    * Display if checksum fails for a file, output expected and found checksums.

    user visible changes, admin:
    * Fixed a problem where softlinks would be followed during wtar.
    * Added progress report to fix-symlinks
    * Added progress report to stage2svn
    * Command up-repo-rev: added the option to up load only the repo rev file with the number at it's tail, not the official one. The option in called --just-with-number.
    * Command up2s3: Now uploads the numbers repo-rev file using the new option --just-with-num of command up-repo-rev.
    * Command file-props:
          - The command did not actually work until now, just printed what should have been done - now it works.
          - file svn-proplist-for-fix-props.txt is created for reference.

29/4/2014 0.9.6   Shai Shasag <shai@waves.com>


    user visible changes, client:
    * new initial vars defined in main: __USRER_ID__, __GROUP_ID__ record the user and group when instl was called. Useful for usaing in the produced script, when called as sudo, to set permissions to the original owner.
    * New variable from main.yaml: MKDIR_CMD to be able to call from index and mkdir command defined by instl. In this case on Mac MKDIR_CMD expands to mkdir_with_owner.
    * Copy now calls mkdir_with_owner on Mac so to properly set owner and permissions for created folders.
    * Copy scripts on Mac get a function mkdir_with_owner so to properly set owner and permissions for created folders.
    * new method PlatformSpecificHelperBase.mkdir_with_owner defaults to PlatformSpecificHelperBase.mkdir, implemented on Mac to call locally defined mkdir_with_owner.


27/4/2014 0.9.5  Shai Shasag <shai@waves.com>

    user visible changes, client:
    * Improved support for syncing from perforce.
    * Logging of echo messages from batch files by using new variable ECHO_LOG_FILE. (Mac)
    * added --group --owner to rsync commands - should preserve user/group when copying under sudo.

    programmer visible changes:
    * New type of defaults file by repo type, i.e. P4.yaml, URL.yaml. Currently added P4.yaml to defaults folder.
    * New utility function: P4GetPathFromDepotPath to get teh local disk path from p4 depot path.
    * Usage of $(LOCAL_REPO_SOURCES_DIR) instead of $(LOCAL_REPO_SYNC_DIR)/$(SOURCE_PREFIX) - because p4 does not need SOURCE_PREFIX.
    * new variable: ECHO_LOG_FILE. If defined all echos from batch file will be teeed to this file. (Mac).    user visible changes, admin:
    * new method  configVarList.defined returns true if a value is defined and has none empty value. So calling with a variable name who's value consists of an empty string will return False.

16/4/2014 0.9.4  Shai Shasag <shai@waves.com>

    user visible changes, client:
    * Added new actions types for install items: copy_in, copy_out.
    * Added  copy_in actions for Au regi utility

    programmer visible changes:
    * new method accumulate_unique_actions to replace repeating code.


8/4/2014 0.9.3 Shai Shasag <shai@waves.com>

    user visible changes, client:
    * Streamlined logging. Removed many redundant messages added some useful others.
    * Fixed: Executable files on Mac would not get executable bit.

    user visible changes, admin:
    * New command set_exec, sets executable bit for files marked as fx in info_map.txt

    programmer visible changes:
    * SVNItem.num_subs_in_tree has new parameter: predicate this can be used to filter the number of files, defaults to True so previous behaviour remains.

6/4/2014 0.9.2  Shai Shasag <shai@waves.com>

    user visible changes, client:
    * Fix --run where path to batch has spaces in name (Windows).

3/4/2014 0.9.1  Shai Shasag <shai@waves.com>

    user visible changes, client:
    * Fixed exception when trying to read public key file.

30/3/2014 0.9.0  Shai Shasag <shai@waves.com>

    user visible changes, client:
    * interactive command eval renamed python.
    * New interactive command: resolve, will resolve variables in a string.

    user visible changes, admin:

    programmer visible changes:
    * Removed variable __CHECKOUT_FOLDER__, it is totaly replaced by $(ROOT_LINKS_FOLDER_REPO)/Base.
    * Moved pyinstaller build scripts to inside the instl repository
    * PUBLIC_KEY is read from  PUBLIC_KEY_FILE and PUBLIC_KEY_FILE is searched with search paths in read_include_node and in init_sync_vars.
    
13/3/2014 0.8.10  Shai Shasag <shai@waves.com>

    user visible changes, client:
    * Main feature: support for Windows XP.
    * Fixed: COPY_TOOL set to xcopy was ignored (WinXP).
    * Solved weird problems with xcopy. The /EXCLUDE option of xcopy cannot except a file with space it's path,
        nor will it except a quoted path. So the excludes file is copied to each and every target folder
        during the copy stage.
    * Fixed: when compiled raised exceptions would not cause exit code > 0 (Windows).
    * Fixed: Redundant messages when checksum fails.
    * Shorter max time for curl since now no file is > 5MB.
    * Fixed a bug in function need_to_download_file where True was always returned. This caused already downloaded files
        to be redownloaded if some situations.
    * PARALLEL_SYNC: 32 - new default

    user visible changes, admin:
    * More concise messages for create-links and up2s3

    programmer visible changes:
    * Moved the initialization of copytool to after reading the main yaml file.
    * Fixed: Some inconsitancies in CopyTool_win_xcopy commands.
    * New variables: XCOPY_EXCLUDE_FILE_NAME, XCOPY_EXCLUDE_FILE_PATH to overcome xcopy limitations.
    * New copy tools methods begin_copy_folder, end_copy_folder  to overcome xcopy limitations.
    * Changes to variable names:
         LOCAL_SYNC_DIR now always refers to the to top level sync dirs - above repo sync dir.
         LOCAL_REPO_SYNC_DIR - new - defaults to $(LOCAL_SYNC_DIR)/$(REPO_NAME), e.g. /Users/shai/Library/Caches/Waves Audio/instl/instl.waves.com/V9_test
         SOURCE_PREFIX - new - defaults to $(TARGET_OS)
         LOCAL_BOOKKEEPING_PATH - renamed LOCAL_REPO_BOOKKEEPING_DIR
         REPO_REV_LOCAL_BOOKKEEPING_PATH - renamed LOCAL_REPO_REV_BOOKKEEPING_DIR
         LOCAL_REPO_SOURCES_DIR - removed - use $(LOCAL_REPO_SYNC_DIR)/$(SOURCE_PREFIX) instead
         SYNC_TRAGET_OS_URL - removed - replaced by $(SYNC_BASE_URL)/$(TARGET_OS)
    * Due to variable changed method InstlClient.init_copy_vars is empty now.
    * functions main_url_item now return parseResult.netloc OR parseResult.path not both

5/3/2014 0.8.9 Shai Shasag <shai@waves.com>

    user visible changes, client:
    * create-folders, unwtar and check-checksum are now done as internal instl commands instead of relying on external utilities.
    * During unwtar if .wtar.aa file is joined, .wtar.done file is removed.
    * New command create-folders will create folders for sync according to the to_sync_info_map.txt.
    * New command check-checksum will check checksums according to the to_sync_info_map.txt.
    * InstlMisc commands report execution time.
    * Windows: robocopy copy_dir_to_dir has /PURGE parameter so that redundant files in the target will be removed.
    * Mac: rsync copy_dir_to_dir has --delete parameter so that redundant files in the target will be removed.

    user visible changes, admin:
    * Creation of .txt files for all files in instl directory was moved from up2s3 command to create-links command.
    * up2s3 will upload up to the latest repo revision and not up to BASE_REPO_REV.
    * Options --start-progress and --total-progress become optional (for commands that accept them). Not supplying means there will be no progress report.
    * InstlMisc commands can report progress, some do it with staccato.

    programmer visible changes:
    * platformHelper renamed platform_helper everywhere.
    * New method InstlAdmin.get_last_repo_rev.
    * init_from_cmd_line_options can now assign defaults to options that were not specifed on the command line.
    * InstlMisc commands can now report progress by using --start-progress and --total-progress command line options.
    * PlatformSpecificHelperBase.check_checksum renamed check_checksum_for_file.
    * New method PlatformSpecificHelperBase.check_checksum_for_folder
    * PlatformSpecificHelperBase.unwtar renamed unwtar_file.
    * Method PlatformSpecificHelperBase.unwtar_current_folder, with added exit_if_error for windows.

4/3/2014 0.8.8 Shai Shasag <shai@waves.com>

    user visible changes, client:
    * Fixed a problem where files created when instl runs under sudo,
        could not be re-written under regular user.
    * unwtar command added - replaced individual batch file unwtar commands with inst unwtar.
    * Big files above 5MB will be wtared and split into chuncks is the result wtar if is larger than 5MB.
    * New variable: COPY_IGNORE_PATTERNS instead of hard coded in the copy producing code.
    * sync command will report the number of files to sync.

    programmer visible changes:
    * os.umask(0) is called first thing.
    * batch file creation does chmod(777).
    * New method PlatformSpecificHelperBase.unwtar_current_folder.
    * Fixed: instl would not create a correct call for itself (e.g. instl unwtar) when running uncompiled on windows.

26/2/2014 0.8.7 Shai Shasag <shai@waves.com>

    user visible changes, client:
    * When using --run and script fails, exit code is passed correctly.
    * Proper downloading for all possible required items when target_os != current_os (offline sync).
    * Fixed: When running compiled instl in interactive mode exception was raised when instlClient and instlAdmin
        defined the same const values.
    * Better message if checking signature of a downloaded file fails.

    programmer visible changes:
    * init_download_tool method added to platformHelper so that the dl_tool can be initialized after the yaml files were read.
    * New defaults in main.yaml: Win_ALL_OS_NAMES, Mac_ALL_OS_NAMES.
    * Correct list of target OS names is produced in case TARGET_OS != CURRENT_OS.
    * Calling add_const_config_variable twice will not raise exception if the new and previous values are identical.

24/2/2014 0.8.6 Shai Shasag <shai@waves.com>

    user visible changes, client:
    * ACCEPTABLE_YAML_DOC_TAGS from main.yaml was missing from th ecompiled version.
    * version command will add "(not compiled)" if instl is running though python interpreter.
    * New var: __INSTL_COMPILED__ set to True is instl was compiled and False is running though python interpreter.

    user visible changes, admin:
    * fix props:    write svn info to file for debugging and reference. But go one folder up so not to be in the svn repo.

    programmer visible changes:
    * augmentedYaml when running as __main__ can open urls.
    * platformHelper's copy tool is now initialized early so it can be used by InstlInstanceBase.
    * check_prerequisite_var_existence put to good use.
    * copy field added to cached includes, specifying where to copy the file.
    * new batchAccum sections post-sync, post-copy.
    * platformHelper's copy_file_to_file can create a hard link on Mac/linux.

19/2/2014 0.8.5 Shai Shasag <shai@waves.com>

    user visible changes, client:
    * Fixed many sync bugs especialy on Windows.
    * New automatic installation items:
        __ALL_ITEMS_IID__:  all the iids from the index
        __ALL_GUIDS_IID__: all the iids from the index that have guids.
    * Fixed a bug where depend on a guid would not register as depend.
    * Time reporting on exit with error on Mac.
    * Download max-time, connect-timeout and retry have all been increased.
    * More precise, and less verbose, progress messages. No fake progress message when there's nothing to be done.
    * More precise decision when to untar existing wtar files.
    * New Yaml variable: LAST_PROGRESS, set the number of progress items to start with, so two batch files can have
        consecutive progress reports. Defaults to 0.
    * After creating a batch file, the full path to file is printed and the number of progress items.
        This number can be passed to the next invocation of instl as LAST_PROGRESS variable.
    * curl will print "Progress ... of ...;" at the beginning of each report line, to allow the invoker of
        the batch file to track progress even in the absent of absolute numbers.
    * New include style:
        url: $(INDEX_URL)
        checksum: $(INDEX_CHECKSUM)
        sig: $(INDEX_SIG)
        This will cache the file and use the local copy if it matches signature and checksum.
    * Sync command adds __NUM_FILES_TO_DOWNLOAD__ variable with the number of files to download.
    * New yaml doc type !define_const - will create const variables and will not except __include__'s.
    * curl config files and file with list of curl commands are written to a folder named "curl".
        This will avoid clutter in the sync folder and make deleting easier.
    * No more DL_INSTRUCTIONS_TYPE, always use config file. To do non parallel download set PARALLEL_SYNC: 1.
    * Variables ending with _PATH or _DIR will have their value go through os.path.normpath - for proper paths on Windows.
    * New variable: __READ_YAML_FILES__ will list all yaml files that were read.
    * Fixed on Windows: PlatformSpecificHelperWin.touch implemented correctly.

    programmer visible changes:
    * New utils function: safe_remove_file, removes a file and does not complain if file does not exist.
    * New utils function: make_one_list, takes a bunch of things and returns them as a long flat list.
    * New PlatformSpecificHelperBase function progress_staccato, issues a progress message only after a predefined number of requests.
    * New param to PlatformSpecificHelperBase function progress, num_items, can be used to increase the number of total progress items not just by one.
    * New PlatformSpecificHelperBase functions: pushd, popd. They do same as they do on the command line.
    * New PlatformSpecificHelperBase function: touch. Does same as it does on the command line.
    * Mac: exit is done by a function that catches the EXIT trap os that all final instructions are performed even on error.
    * Untaring writes a stamp file when finished corectly. Will prevent redundant re-untar.
    * New BatchAccumulator function __len__, returns the total assignments and instrauction lines.
    * parallel_run.py: plain exit() did not work in compiled code, replaced with sys.exit().
    * got rid of redundant __ALLOWED_COMMANDS__ variable and checking.
    * instlInstanceBase.get_default_sync_dir overhaul  - will use $() variables and will need resolving.
    * Fixed ConfigVar.__str__ so values appear before description.
    * Removed redundant imports from helpHelper.py.
    * Refactored InstlClient to work with standard do_ ... functions for commands.
    * InstlClient.installState is now a member.
    * InstlClient.init_copy_vars moved from instlInstanceBase.
    * Many default variables read from files instead of being hard coded.
    * Added default files for all instl (main.yaml) and for specific classes (instlAdmin, InstlClient).
    * Fix on Windows: Hard coded path replaced by $(CHECKSUM_TOOL_PATH) check_checksum_for_file.
    * CopyTool_win_robocopy, CopyTool_win_xcopy, PlatformSpecificHelperWin will call os.path.normpath on parameters containing paths.


13/2/2015 0.8.4 Shai Shasag <shai@waves.com>

    user visible changes, client:
    * Fixed: on windows files with '&' in name would not pass checksum check.
    * All curl downloads are performed though instl own parallel-run command.

    user visible changes, admin:
    * platfotmSpecificHelper methods svn_add_item, svn_remove_item use $(SVN_CLIENT_PATH) instead of plain svn.
    * overhual to do_up2s3, loop on relavent revisions instead of exiating folders.
    * overhual to do_fix_props, make it less verbose and better messages.
    * svn2stage, stage2svn will not use rsync link_dest, because it confuses svn.

    programmer visible changes:
    * New function for windows dos_escape, escapes the & character with ^&

11/2/2014 0.8.3 Shai Shasag <shai@waves.com>

    user visible changes, client:
    * curl connect-timeout = 3 instead of 60
    * improved reporting on config file curl downloads.
    * Fixed: empty config files were created if the number of files to download was smaller than the number of config files. Now each config file will have at least 4 urls.
    * curl: shorter connect-time - 3 sec.
    * curl: shorter max-time - 60sec.
    * curl: three retries
    * create_prefix_instructions_for_item_config_file checks if folder exists before issuing mkdir.
    * sync command: Hack to force untaring of .wtar files by forcing them to be downloaded again.
    * create_config_files will return empty list if there were no files to download.
    * Windows 7za untaring got a -bd flag to reduce verbosity.
    * Windows: errorlevel checking on 7za untaring.
    * Windows: 7za untaring redirect stderr to NUL, because 7za trash-talks no error messages to stderr.

    user visible changes, admin:
    * New command: verify-index, helps admin find problems in index and info map.

    programmer visible changes:
    * quoteme_single, quoteme_double moved to utils for all to enjoy.
    * member install_definitions_index, method read_index, moved to InstlInstanceBase so instlAdmin can also use them.
    * InstallItem.add_source also adds the type for the source (!file, !dir, et...)

10/2/2014 0.8.2  Shai Shasag <shai@waves.com>
    
    user visible changes, client:
    * Fixed wrong relative path created for create-links command.
    * Added time measurements to batch file produces for windows.
    * Removed redundant quotes from echo messages on windows.
    * Added DownloadTool_win_curl in one-by-one and config-file modes.
    * Added progress message to pre and post parallel sync actions.
    * Windows: Added checking of 7za return value and goto exit if > 0
    * Windows: Divert 7za stderr message to NUL since non-error messages are directed to stderr by 7za.

    user visible changes, admin:
    * usage of $(SVN_CLIENT_PATH) instead of svn in all adming commands.
    * Fixed: fix-props output batch file was not written to the current folder.
    * Fixed wrong relative path created for create-links command.

    programmer visible changes:
    * Creation of PlatformSpecificHelper moved to do_command so it can take to consideration settings from the yaml file.

3/2/2014 0.8.1 Shai Shasag <shai@waves.com>

    user visible changes, client:
    * Little faster sync/copy/syncopy due to optimiztions in SVNItem.
    * Fixed copy_dir_to_dir on Mac that did not create hard links
    * Fixed new_item_at_path that did not create the have map correctly

    user visible changes, admin:
    * New command: create-repo-rev-file, to separate repo rev file creation and uploading.
    * command up-repo-rev only uploads the already created repo rev file.
    * type fixed REPO_REV_FILE_VARS instead of REPO_REV_FILE_VARAIBLES

    programmer visible changes:
    * some rearranging of parser creation, and removed redundant members from CommandLineOptions
    * moved the discovery of info_map's file type to svnTree.py
    * added ConfigVar.resolved_num to help track which var is used in which command.
    * PlatformSpecificHelper's var_assign got new param: comment
    * Many optimizations to SVNItem code.
    * Using cStringIO instead of StringIO.
    * Test files for SVNTree test will be produced without comments, also changed the reference file.
    * added tests for test_platformSpecificHelper not finished yet.
    * copy_tool.copy_file_to_dir accepts bool for link_dest and should figure the destination.
    * info_map write files accept a comments param.
    * safe_makedirs will return the dir it made.

29/1/2014 0.8.0 Shai Shasag <shai@waves.com>

    Main 0.8.0 features:
    * Create and check signature for info_map.txt file

    user visible changes, client:
    * using STAGING_FOLDER, SVN_CHECKOUT_FOLDER, SVN_CLIENT_PATH, DOWNLOAD_TOOL_PATH, CHECKSUM_TOOL_PATH instead of __STAGING_FOLDER__ , __SVN_FOLDER__, __RESOLVED_SVN_CLIENT_PATH__, __RESOLVED_DOWNLOAD_TOOL_PATH__, __RESOLVED_CHECKSUM_TOOL_PATH__
    * wtar files are expanded during sync not during copy
    * Fixed unwtar for Windows
    * InstlInstanceSync_url.read_remote_info_map checks signature against public key.
    * If file to download is already present, no not check checksum in batch file.    user visible changes, client:
    * option --config_file renamed --config-file, for easy typing experience
    * added some missing command help text.

    user visible changes, admin:
    * New command svn2stage, to prepare folders for entering changes
    * New command wtar, to proparly tar what needs to be tared
    * New command createkeys
    * up_repo_rev calculates sig for info_map.txt if INFO_MAP_SIG is defined in config file.
    * New command make-sig creates sha1 checksum and rsa signature for a file, needs private key.
    * New command check-sig checks sha1 checksum and rsa signature for a file, needs public key.
    * command up_repo_rev renamed up-repo-rev, for easy typing experience
    * command fix_props renamed fix-props, for easy typing experience
    * command fix_symlinks renamed fix-symlinks, for easy typing experience
    * command createlinks renamed create-links, for easy typing experience.
    * command createkeys renamed create-rsa-keys, for easy typing experience and more fitting name.
    * PUBLIC_KEY variable is created by reading PUBLIC_KEY_FILE, unless it's already defined.
    * PRIVATE_KEY variable is created by reading PRIVATE_KEY_FILE, unless it's already defined.
    * repo rev file will be saved with $(REPO_REV) appended to the name.
        Will be uploaded twice with and without the $(REPO_REV) in name.

    programmer visible changes:
    * New method for PlatformSpecificHelperBase & derivatives: tar/untar
    * Implemented rmdir, rmfile for Windows
    * removed checks for __ALLOWED_COMMANDS__, this functionality is already covered by getattr(self, "do_"+the_command)
    * @func_log_wrapper removed from all functions. It interfered with PyCharm debugging.
    * instlInstance replaced with instlObj to make lines shorter.
    * download_from_file_or_url function: added params for checking signature with public key.
    * prevent variables INFO_MAP_SIG, PUBLIC_KEY from being written to batch file.
    * started checking of info_map.txt when downloading.
    * many new checksum and signature functions.
    * rearranged instl_help.yaml commands in alphabetical order.
    * download_from_file_or_url can check signature or checksum if they are given.
    * command createlinks renamed create-links, for easy typing experience.
    * command createkeys renamed create-rsa-keys, for easy typing experience and more fitting name.
    * parser returns the name of all possible commands.
    * fixed bugs in check_buffer_signature_or_checksum
    * removed redundant double check for info_map file existence in read_remote_info_map

26/1/2014 0.7.2  Shai Shasag <shai@waves.com>

    user visible changes, client:
     * Fixed exception handling and output to stderr.
        Now all "bad" output should go to stderr. Errorlevel should be proearly set.

23/1/2014 0.7.1 Shai Shasag <shai@waves.com>

    user visible changes, client:
    * progress report for folder actions
    * SET_ICON_TOOL_PATH instead of SET_ICON_PATH
    * better progress report for svn sync

23/1/2014 0.7.0 Shai Shasag <shai@waves.com>

     Main 0.7.0 features:
    * Check checksum of files after download.
    * Conditional document tags in yaml (see below)

    user visible changes, client:
    * Windows: wget gets --quite option
    * Windows: Running mkdir only if path does not exist
    * Removed the --state option, it was not working.
    * Removed the commands 'alias', 'shortcut' and 'fix_icon' , they were not used.
    * New help system: Usage: instl help command
    * Mac and Linux: "#!/usr/bin/env bash" instead of "#!/bin/sh" to be the shebang
    * Mac: Time measurement reporting in batch files
    * Checksum checking code
    * Windows: exit_if_error is added after most created batch file lines
    * All Mac & Linux rm commands generated by code were added the -f flags
    * Check for existance of file and it's checksum before issuing a sync command.
        Should be useful if sync was stopped half-way
    * Conditional document tags in yaml. Variable ACCEPTABLE_YAML_DOC_TAGS can specify additional doc tags that should start with index or define.
        Example:
            ACCEPTABLE_YAML_DOC_TAGS: define_$(TARGET_OS)
            Would later read sections starting with !define_Win - if Win is the target os.
    * Fixed bugs in interactive mode list command.
    * name of batch file is printed after it is written
    * variable TARGET_OS_SECOND_NAME defaults to os_second_name
    * Fixed list guid in interactive mode
    * Variable SEARCH_PATHS enables so set search paths in the yaml file.
    * improved reporting of bad checksum on windows.
    * Windows: robocopy might exit with error even if there are no errors. So error checking for robocopy is now level dependent.
    * resolve_defined_paths: SEARCH_PATHS, PATHS_TO_RESOLVE
    * sync message outputs the url for each file

    Changes to V9_test repository that do not effect code
    * 7ZA_CLIENT_PATH renamed WTAR_OPENER_TOOL_PATH, the 7 probably caused problems on windows
    * All Mac rm commands in index were added the -f flags
    * DOWNLOAD_TOOL_PATH moved to index.yaml
    * Mac:Setting of .framewoks to be bundles is now done by a new version of setIcon.
    * CURRENT_OS_NAMES renamed __CURRENT_OS_NAMES__

    user visible changes, admin:
    * New command stage2svn
    * Exception is thrown if unknown admin command is called
    * up_repo_rev now accepts only one option: --config_file, repo_rev file to upload is
        created on the fly.
    * Changed fix_props command to read information from config file.
    * trans command new option --base-repo-rev instead of --config-file that supplied the value before
    * createlinks will remove the up2s3 stamp file - if there is any
    * up2s4 will upload .txt versions of .yaml|info|props files in the instl folder
        so these files can be displayed in a browser.
    * ROOT_LINKS_FOLDER renamed ROOT_LINKS_FOLDER_REPO. ROOT_LINKS_FOLDER will point to the links folder above all repositories
    * repo_rev file is saved to "$(ROOT_LINKS_FOLDER)/admin"
    * Adjusted createlinks to work on local path urls

    programmer visible changes:
    * Copy tools now accept a list of ignores and don't just assume .svn and *.symlink should be ignored
    * CopyToolMacRsync and CopyToolLinuxRsync now inherit from common CopyToolRsync
    * quoteme function is now quoteme_double and a new function is born: quoteme_single
    * Improved ConfigVarList.repr_for_yaml: added option not to write comments, add !define tag to document.
    * Reorganised instl command line parser
    * Data files (currently inst_help.yaml) can be accessed from instl when it's compiled.
        Using the new function get_data_folder()
    * Removed unused functions do_create_readlinks & do_resolve_readlinks as they are now
        incorporated into fix_symlinks.
    * Read/Write of info files can handle checksum field for files. All formats info/text/yaml
    * Fixed: --run option was required for trans command, although run is not relevant for this command.
    * Function renames: create_download_file_to_file_command -> download_url_to_file
                        create_download_from_config_file -> download_from_config_file
                        add_dl -> add_download_url
    * CopyTool classes and DownloadTool classes have platformHelper member,
        initialized in super, and so now all such classes have __init__ methods
    * ConfigVarList.is_resolved checks is a string has no $() references
    * Added data folder to search paths, removed the instl executable which was not usefull since it's a file.
    * file read for checksum using "rb" for Windows' sake.
    * download_from_file_or_url writes with "wb" for windows' sake.
    * option to redirect robocopy log to instl log - currently only from code not for variables.

9/1/2014 0.6.5  Shai Shasag <shai@waves.com>

    user visible changes, client:
    * Windows: improved batch file creation: @echo off
    * create_variables_assignment now always writes all internal variables, even in debug mode.
    * Output files on Linux and Mac get "set -e" so the fail if any sub-commands fails.

    user visible changes, admin:
    * added fix_symlinks command to replace symlinks with .symlink files. Worls only on Mac.
    * changed behaviour of create_links and up2s3 to be responsible for the whole links folder
        and to figure out want needs to be copied and what needs to be uploaded.
        --revision command line option is not available any more.
    * added fix_props command to add/remove inappropriate properties in the svn repository.
    * stamp file for createlinks and up2s3 will contain the base_repo_rev.
        So if repo_rev changes, new links will be created and uploaded.

    programmer visible changes:
    * Variable ROOT_VERSION_NAME changed to REPO_NAME
    * fixed: ConstConfigVar cannot refer to an inherited member that begin with __.
        So the getter function is called instead.
    * platformSpecificHelper rmdir method accepts new parameter 'recursive'
        when True enables the deletion of non-empty directories.
    * SVNTopItem new method min_max_rev, returns the minimal and maximal last_rev
        of it's sub-items.
    * CONFIG_FILE renamed __CONFIG_FILE__ because it's an internal variable.
    * __CONFIG_FILE__ is resolved and value assigned to __CONFIG_FILE_PATH__.
    * Config file is read once for all commands.
    * added props member to SVNItem to hold properties that are not executable or special (symlink)
    * Rearranged instlAdmin.py to deduce the name of the method to run from the command name
        ("fix_symlinks" -> do_fix_symlinks()))
    * fixed typos and redundant lines in progress report.     user visible changes:

2/1/2014 0.6.4  Shai Shasag <shai@waves.com>
    user visible changes:
    * instl version command works.
    * produced files get remark with the version of instl that created them.
    * sync one_by_one produces meaningfull progress report.
    * Windows: can download files with spaces in their name, such as "WaveShell-DAE 9.2.dpm".

    programmer visible changes:
    * Windows: urls need to escape spaces as %20, but windows batch files already
        escape '%' characters so use urllib.quote to escape spaces and then change
        %20 to %%20.

2/1/2014 0.6.3  Shai Shasag <shai@waves.com>
    * recompiled 0.6.3 for windows because the file instMisc.py was missing from previous
        compilation.

1/1/2014 0.6.3  Shai Shasag <shai@waves.com>
    user visible changes:
    * Printing exceptions with traceback and returning proper exit code in case of failure
    * Renamed GET_URL_CLIENT_PATH to DOWNLOAD_TOOL_PATH
    * Removed unecessary indentation in svn output files
    * Fixed get_install_instructions_prefix for Mac - #!/bin/sh returned first
    * No resolving of readlink files. Temporary until we fiind a coherent method of handling symlinks
    * produced batch files on windows return to the orignal starting dir

    programmer visible changes:
    * Raising exception if REPRO_TYPE is not defined for sync command
    * Raising exceptions in instl.main (handled and unhandled)
    * DOWNLOAD_TOOL_PATH used as variable in download tools
    * Added return_original_if_not_found to instlInstance.search_paths_helper.find_file_with_search_paths
    * import urllib in platformSpecificHelper_Win
    * Normalized paths for windows, so they always have \. Since some DOS commands cannot handle /

2013-12-30 0.6.2  Shai Shasag <shai@waves.com>
    user visible changes:
    * curl DL_INSTRUCTIONS_TYPE: either config_file or one_by_one
    * new instl commands:
        ** create_readlinks, creates .readlink files instead of symlink
        ** resolve_readlinks creates symlinks instead of .readlinks file - currentlu used in copy on Mac OS
    * trans command now reads BASE_REV from config file, has new option --config
    * up2s3 command implemented using aws and writes a batch file like all other commands
    * up2s3 command can be used on a range of versions
    * * fixed bad handling of \r\n in info_map files on Windows 

    programmer visible changes:
    * new function SVNItem.walk_items_depth_first, and tests for this function
    * platformSpecificHelper_XXX new functions: rmfile, rmdir, not implemented for windows yet
    * variable BASE_REPO_REV default set to 1 for all commands
    * CONFIG_FILE variable instead to S3_CONFIG_FILE and used by all instlAdmin commands

2013-12-29  0.6.1  Shai Shasag <shai@waves.com>
    * fixed wrong depends calculation.
    * special characters in urls given to curl are now escaped using the %xx convention
